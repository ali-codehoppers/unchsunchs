/**************************************************************************
-- -Generated by xSQL SDK for Schema Comparison and Synchronization
-- -Date/Time: January 11, 2010 09:57:15

-- -Summary:
    Contains the T-SQL script that makes the database 
    .\SQLEXPRESS.HSRelease the same as the database .\SQLEXPRESS.HSTEST

-- -Action:
    Execute this script on .\SQLEXPRESS.HSRelease

-- -SQL Server version: 10.0.1600
**************************************************************************/

BEGIN TRANSACTION
	SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
	SET QUOTED_IDENTIFIER ON
	SET ANSI_NULLS ON
	SET ANSI_PADDING ON
	SET ANSI_WARNINGS ON
	SET ARITHABORT ON
	SET NUMERIC_ROUNDABORT OFF
	SET CONCAT_NULL_YIELDS_NULL ON
	SET XACT_ABORT ON
COMMIT TRANSACTION
GO

IF EXISTS (select * from tempdb..sysobjects where id = OBJECT_ID('tempdb..#ErrorLog')) 
	DROP TABLE #ErrorLog 
CREATE TABLE #ErrorLog 
( pkid [int] IDENTITY(1,1) NOT NULL, errno [int] NOT NULL, errdescr [varchar](100) NULL )
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[un_co_dept_template_doc_contents] (
	[doc_id] [int] NOT NULL,
	[co_id] [int] NOT NULL,
	[dept_id] [int] NOT NULL,
	[file_contents] varbinary(max) NOT NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add table dbo.un_co_dept_template_doc_contents')
END
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[un_co_dept_doc_type]
	ADD [category] [varchar](50) COLLATE Latin1_General_CI_AS NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.un_co_dept_doc_type.category')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[un_co_details]
	ADD [order_sms_count] [int] NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.un_co_details.order_sms_count')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[CategorySelectById]
	@category_id int
AS
	SET NOCOUNT ON;
SELECT        un_co_dept_categories.*
FROM            un_co_dept_categories
WHERE		category_id = @category_id;
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.CategorySelectById')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[CategorySelectByName]
	@dept_id int,
	@co_id int,
	@category_type char(1),
	@category_name varchar(250),
	@original_category_id int
AS
	SET NOCOUNT ON;
SELECT        un_co_dept_categories.*
FROM            un_co_dept_categories
WHERE	co_id = @co_id
AND		dept_id = @dept_id
AND		category_type = @category_type
AND		category_name = @category_name 
AND		(@original_category_id IS NULL OR category_id <> @original_category_id)
AND		flg_delete = 0
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.CategorySelectByName')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[CompanyInsertCommand]
(
	@flg_deleted bit,
	@co_name_short varchar(16),
	@co_name_long varchar(60),
	@contact_title varchar(7),
	@contact_initials varchar(3),
	@contact_forename varchar(60),
	@contact_surname varchar(60),
	@address_no varchar(32),
	@address_line1 varchar(60),
	@address_line2 varchar(60),
	@address_line3 varchar(60),
	@address_line4 varchar(60),
	@address_line5 varchar(60),
	@address_post_code varchar(9),
	@address_full varchar(1000),
	@tel_1 varchar(30),
	@tel_2 varchar(30),
	@tel_fax varchar(30),
	@email varchar(60),
	@co_notes varchar(1000),
	@licenses_purchased int,
	@lincenses_used int,
	@flg_system_locked bit,
	@created_by int,
	@date_created datetime,
	@last_ameneded_by int,
	@date_last_amended datetime,
	@flg_autosave bit,
	@fire_warden_label varchar(50),
	@first_aider_label varchar(50),
	@flg_multi_supervisors bit,
	@supervisor_label varchar(50),
	@flg_active bit,
	@order_sms_count int
)
AS
	SET NOCOUNT OFF;
INSERT INTO [un_co_details] ([flg_deleted], [co_name_short], [co_name_long], [contact_title], [contact_initials], [contact_forename], [contact_surname], [address_no], [address_line1], [address_line2], [address_line3], [address_line4], [address_line5], [address_post_code], [address_full], [tel_1], [tel_2], [tel_fax], [email], [co_notes], [licenses_purchased], [lincenses_used], [flg_system_locked], [created_by], [date_created], [last_ameneded_by], [date_last_amended],[flg_autosave],[fire_warden_label],[first_aider_label],[flg_multi_supervisors],[supervisor_label],[flg_active],[order_sms_count]) VALUES (@flg_deleted, @co_name_short, @co_name_long, @contact_title, @contact_initials, @contact_forename, @contact_surname, @address_no, @address_line1, @address_line2, @address_line3, @address_line4, @address_line5, @address_post_code, @address_full, @tel_1, @tel_2, @tel_fax, @email, @co_notes, @licenses_purchased, @lincenses_used, @flg_system_locked, @created_by, @date_created, @last_ameneded_by, @date_last_amended,@flg_autosave,@fire_warden_label,@first_aider_label,@flg_multi_supervisors,@supervisor_label,@flg_active,@order_sms_count);
	
SELECT * FROM un_co_details WHERE (co_id = SCOPE_IDENTITY())
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.CompanyInsertCommand')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[DepartmentOrderInsertCommand]
(
	@flg_delete bit,
	@dept_id int,
	@co_id int,
	@order_ref varchar(32),
	@order_client_ref varchar(32),
	@order_sms varchar(32),
	@date_order_created datetime,
	@order_est_of_works int,
	@date_order_review datetime,
	@flg_order_doc_to_client bit,
	@address_no varchar(32),
	@address_line1 varchar(128),
	@address_line2 varchar(128),
	@address_line3 varchar(128),
	@address_line4 varchar(128),
	@address_line5 varchar(128),
	@address_post_code varchar(9),
	@address_full varchar(1000),
	@order_desc varchar(1000),
	@flg_multi_emer_exits bit,
	@flg_multi_assem_points bit,
	@flg_cancelled bit,
	@date_cancelled datetime,
	@desc_of_work varchar(1000),
	@est_num_of_operatives int,
	@risk_taking varchar(20),
	@created_by int,
	@date_created datetime,
	@last_amended_by int,
	@date_last_amended datetime
)
AS
	SET NOCOUNT OFF;
	
DECLARE @orderSmsString varchar(6);

UPDATE un_co_details SET order_sms_count = order_sms_count + 1 where co_id = @co_id;

SELECT @orderSmsString = CAST(order_sms_count as varchar) from un_co_details where co_id = @co_id;

SELECT @orderSmsString = REPLICATE('0',6 - LEN(@orderSmsString)) + @orderSmsString;

INSERT INTO [un_co_dept_ords] ([flg_delete], [dept_id], [co_id], [order_ref], [order_client_ref], [order_sms], [date_order_created], [order_est_of_works], [date_order_review], [flg_order_doc_to_client], [address_no], [address_line1], [address_line2], [address_line3], [address_line4], [address_line5], [address_post_code], [address_full], [order_desc], [flg_multi_emer_exits], [flg_multi_assem_points], [flg_cancelled], [date_cancelled],[desc_of_work],[est_num_of_operatives],[risk_taking], [created_by], [date_created], [last_amended_by], [date_last_amended]) VALUES (@flg_delete, @dept_id, @co_id, @order_ref, @order_client_ref, @orderSmsString, @date_order_created, @order_est_of_works, @date_order_review, @flg_order_doc_to_client, @address_no, @address_line1, @address_line2, @address_line3, @address_line4, @address_line5, @address_post_code, @address_full, @order_desc, @flg_multi_emer_exits, @flg_multi_assem_points, @flg_cancelled, @date_cancelled,@desc_of_work,@est_num_of_operatives,@risk_taking, @created_by, @date_created, @last_amended_by, @date_last_amended);

SELECT * FROM un_co_dept_ords WHERE (sequence = SCOPE_IDENTITY())
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.DepartmentOrderInsertCommand')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[DocSectionDetailSelectByName]
	@co_id int,
	@dept_id int,
	@section_id int,
	@section_detail_desc varchar(100)
AS
	SET NOCOUNT ON;
SELECT        un_co_dept_template_section_details.*
FROM            un_co_dept_template_section_details
WHERE	co_id = @co_id
and		dept_id = @dept_id
and		section_id = @section_id
and		section_detail_desc = @section_detail_desc
and		flg_delete = 0
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.DocSectionDetailSelectByName')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[DocSectionSelectByName]
	@co_id int,
	@dept_id int,
	@section_desc varchar(50)
AS
	SET NOCOUNT ON;
SELECT        un_co_dept_template_sections.*
FROM            un_co_dept_template_sections
WHERE co_id = @co_id
and dept_id = @dept_id
and section_desc = @section_desc
and flg_delete = 0
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.DocSectionSelectByName')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[DocumentContenSelect]
	@doc_id int,
	@co_id int,
	@dept_id int
AS
	SET NOCOUNT ON;
SELECT        un_co_dept_template_doc_contents.*
FROM            un_co_dept_template_doc_contents
WHERE	doc_id = @doc_id
AND		co_id = @co_id
AND		dept_id = @dept_id;
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.DocumentContenSelect')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE dbo.DocumentContentDelete
(
	@Original_doc_id int
)
AS
	SET NOCOUNT OFF;
DELETE FROM [un_co_dept_template_doc_contents] WHERE (([doc_id] = @Original_doc_id))
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.DocumentContentDelete')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE dbo.DocumentContentInsert
(
	@doc_id int,
	@co_id int,
	@dept_id int,
	@file_contents varbinary(MAX)
)
AS
	SET NOCOUNT OFF;
INSERT INTO [un_co_dept_template_doc_contents] ([doc_id], [co_id], [dept_id], [file_contents]) VALUES (@doc_id, @co_id, @dept_id, @file_contents);
	
SELECT doc_id, co_id, dept_id, file_contents FROM un_co_dept_template_doc_contents WHERE (doc_id = @doc_id)
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.DocumentContentInsert')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE dbo.DocumentContentUpdate
(
	@doc_id int,
	@co_id int,
	@dept_id int,
	@file_contents varbinary(MAX),
	@Original_doc_id int
)
AS
	SET NOCOUNT OFF;
UPDATE [un_co_dept_template_doc_contents] SET [doc_id] = @doc_id, [co_id] = @co_id, [dept_id] = @dept_id, [file_contents] = @file_contents WHERE (([doc_id] = @Original_doc_id));
	
SELECT doc_id, co_id, dept_id, file_contents FROM un_co_dept_template_doc_contents WHERE (doc_id = @doc_id)
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.DocumentContentUpdate')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[DocumentInsert]
(
	@co_id int,
	@dept_id int,
	@doc_type_id int,
	@doc_name varchar(255),
	@doc_desc varchar(255),
	@doc_code varchar(50),
	@category_id int,
	@doc_index int,
	@file_contents varbinary(MAX)
)
AS
	SET NOCOUNT OFF;
INSERT INTO [un_co_dept_template_docs] ([co_id], [dept_id], [doc_type_id], [doc_name], [doc_desc], [doc_code],[category_id],[doc_index]) VALUES (@co_id, @dept_id, @doc_type_id, @doc_name, @doc_desc, @doc_code,@category_id,@doc_index);

IF  @file_contents IS NOT NULL 
BEGIN	
	INSERT INTO [un_co_dept_template_doc_contents](co_id,dept_id,doc_id,file_contents)
	VALUES(@co_id,@dept_id,@@IDENTITY,@file_contents);
END
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.DocumentInsert')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
create PROCEDURE [dbo].[DocumentSelectByName]
	@co_id int,
	@dept_id int,
	@doc_type_id int,
	@doc_name varchar(255)
AS
	SET NOCOUNT ON;
SELECT        un_co_dept_template_docs.*,un_co_dept_categories.category_name
FROM            un_co_dept_template_docs
INNER JOIN un_co_dept_categories ON un_co_dept_categories.category_id = un_co_dept_template_docs.category_id
WHERE		un_co_dept_template_docs.co_id = @co_id
AND			un_co_dept_template_docs.dept_id = @dept_id
AND			doc_type_id = @doc_type_id
AND			doc_name = @doc_name
AND		un_co_dept_template_docs.flg_delete = 0
ORDER BY doc_index
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.DocumentSelectByName')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[DocumentTypeInsert]
(
	@doc_data_type_desc varchar(255),
	@flg_delete bit,
	@co_id int,
	@dept_id int,
	@sort_order tinyint,
	@field_type varchar(50),
	@generator_class varchar(255),
	@required bit,
	@style varchar(500),
	@flg_landscape bit,
	@num_of_sections int,
	@flg_checked bit,
	@category varchar(50)
)
AS
	SET NOCOUNT OFF;
INSERT INTO [un_co_dept_doc_type] ([doc_data_type_desc], [flg_delete], [co_id],[dept_id],[sort_order],
		[field_type],[generator_class],[required],[style],[flg_landscape],[num_of_sections],[flg_checked],[category])
      VALUES (@doc_data_type_desc, @flg_delete, @co_id,@dept_id,@sort_order,@field_type,@generator_class,
		@required,@style,@flg_landscape,@num_of_sections,@flg_checked,@category);
	
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.DocumentTypeInsert')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[DocumentTypeSelectByDeptIdAndCategory]
	@dept_id int,
	@co_id int,
	@category varchar(50)
AS
	SET NOCOUNT ON;
SELECT        un_co_dept_doc_type.*
FROM            un_co_dept_doc_type
WHERE		dept_id = @dept_id
AND		co_id = @co_id
AND		category = @category
and flg_delete = 0
ORDER BY sort_order
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.DocumentTypeSelectByDeptIdAndCategory')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
if not exists (select * from sys.objects where [name] = N'PK_un_co_dept_template_doc_contents' and [type] = 'PK')
ALTER TABLE [dbo].[un_co_dept_template_doc_contents] ADD 
	CONSTRAINT [PK_un_co_dept_template_doc_contents] PRIMARY KEY CLUSTERED 
	(
		[doc_id]
	) ON [PRIMARY];
GO

IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add primary key dbo.un_co_dept_template_doc_contents.PK_un_co_dept_template_doc_contents')
END
GO
IF EXISTS (Select * from #ErrorLog)
BEGIN
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
END
ELSE
BEGIN
	IF @@TRANCOUNT>0 COMMIT TRANSACTION
END
IF EXISTS (Select * from #ErrorLog)
BEGIN
	Print 'Database synchronization script failed'
	GOTO QuitWithErrors
END
ELSE
BEGIN
	Print 'Database synchronization completed successfully'
END



QuitWithErrors:


