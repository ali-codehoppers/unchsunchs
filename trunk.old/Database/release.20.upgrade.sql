/**************************************************************************
-- -Generated by xSQL SDK for Schema Comparison and Synchronization
-- -Date/Time: April 12, 2010 11:50:58

-- -Summary:
    Contains the T-SQL script that makes the database 
    .\SQLEXPRESS.HSRelease the same as the database .\SQLEXPRESS.HSTEST

-- -Action:
    Execute this script on .\SQLEXPRESS.HSRelease

-- -SQL Server version: 10.0.1600
**************************************************************************/

BEGIN TRANSACTION
	SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
	SET QUOTED_IDENTIFIER ON
	SET ANSI_NULLS ON
	SET ANSI_PADDING ON
	SET ANSI_WARNINGS ON
	SET ARITHABORT ON
	SET NUMERIC_ROUNDABORT OFF
	SET CONCAT_NULL_YIELDS_NULL ON
	SET XACT_ABORT ON
COMMIT TRANSACTION
GO

IF EXISTS (select * from tempdb..sysobjects where id = OBJECT_ID('tempdb..#ErrorLog')) 
	DROP TABLE #ErrorLog 
CREATE TABLE #ErrorLog 
( pkid [int] IDENTITY(1,1) NOT NULL, errno [int] NOT NULL, errdescr [varchar](100) NULL )
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[un_ref_co_dept_suggestions] (
	[suggestion_id] [int] IDENTITY (1,1) NOT NULL,
	[co_id] [int] NOT NULL,
	[dept_id] [int] NOT NULL,
	[flg_deleted] [bit] NOT NULL,
	[category_id] [int] NOT NULL,
	[suggestion_text] [varchar](200) COLLATE Latin1_General_CI_AS NOT NULL,
	[index_seq] [int] NOT NULL,
	[suggestion_type] [char](1) COLLATE Latin1_General_CI_AS NOT NULL,
	[flg_default] [bit] NOT NULL
) ON [PRIMARY]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add table dbo.un_ref_co_dept_suggestions')
END
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[un_ref_co_dept_hazards]
	ADD [flg_default] [bit] NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.un_ref_co_dept_hazards.flg_default')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[un_ref_co_dept_ppe]
	ADD [flg_default] [bit] NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.un_ref_co_dept_ppe.flg_default')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[un_ref_co_dept_tools]
	ADD [flg_default] [bit] NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.un_ref_co_dept_tools.flg_default')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[un_co_dept_template_docs]
	ADD [flg_default] [bit] NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.un_co_dept_template_docs.flg_default')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[un_co_details]
	ADD [flg_trial] [bit] NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.un_co_details.flg_trial')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[un_co_details]
	ADD [trial_start_date] [date] NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.un_co_details.trial_start_date')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[un_co_details]
	ADD [trial_num_of_days] [int] NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.un_co_details.trial_num_of_days')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[un_co_details]
	ADD [trial_end_date] [date] NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.un_co_details.trial_end_date')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE dbo.SuggestionDelete
(
	@Original_suggestion_id int
)
AS
	SET NOCOUNT OFF;
DELETE FROM [un_ref_co_dept_suggestions] WHERE (([suggestion_id] = @Original_suggestion_id))
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.SuggestionDelete')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[CompanyInsertCommand]
(
	@flg_deleted bit,
	@co_name_short varchar(16),
	@co_name_long varchar(60),
	@contact_title varchar(7),
	@contact_initials varchar(3),
	@contact_forename varchar(60),
	@contact_surname varchar(60),
	@address_no varchar(32),
	@address_line1 varchar(60),
	@address_line2 varchar(60),
	@address_line3 varchar(60),
	@address_line4 varchar(60),
	@address_line5 varchar(60),
	@address_post_code varchar(9),
	@address_full varchar(1000),
	@tel_1 varchar(30),
	@tel_2 varchar(30),
	@tel_fax varchar(30),
	@email varchar(60),
	@co_notes varchar(1000),
	@licenses_purchased int,
	@lincenses_used int,
	@flg_system_locked bit,
	@created_by int,
	@date_created datetime,
	@last_ameneded_by int,
	@date_last_amended datetime,
	@flg_autosave bit,
	@fire_warden_label varchar(50),
	@first_aider_label varchar(50),
	@flg_multi_supervisors bit,
	@supervisor_label varchar(50),
	@flg_active bit,
	@order_sms_count int,
	@flg_trial bit,
	@trial_start_date date,
	@trial_num_of_days int,
	@trial_end_date date	
)
AS
	SET NOCOUNT OFF;
INSERT INTO [un_co_details] ([flg_deleted], [co_name_short], [co_name_long], [contact_title], [contact_initials], [contact_forename], [contact_surname], [address_no], [address_line1], [address_line2], [address_line3], [address_line4], [address_line5], [address_post_code], [address_full], [tel_1], [tel_2], [tel_fax], [email], [co_notes], [licenses_purchased], [lincenses_used], [flg_system_locked], [created_by], [date_created], [last_ameneded_by], [date_last_amended],[flg_autosave],[fire_warden_label],[first_aider_label],[flg_multi_supervisors],[supervisor_label],[flg_active],[order_sms_count],[flg_trial],[trial_start_date],[trial_num_of_days],[trial_end_date]) VALUES (@flg_deleted, @co_name_short, @co_name_long, @contact_title, @contact_initials, @contact_forename, @contact_surname, @address_no, @address_line1, @address_line2, @address_line3, @address_line4, @address_line5, @address_post_code, @address_full, @tel_1, @tel_2, @tel_fax, @email, @co_notes, @licenses_purchased, @lincenses_used, @flg_system_locked, @created_by, @date_created, @last_ameneded_by, @date_last_amended,@flg_autosave,@fire_warden_label,@first_aider_label,@flg_multi_supervisors,@supervisor_label,@flg_active,@order_sms_count,@flg_trial,@trial_start_date,@trial_num_of_days,@trial_end_date);
	
SELECT * FROM un_co_details WHERE (co_id = SCOPE_IDENTITY())

GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.CompanyInsertCommand')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[CompanyUpdateCommand]
(
	@flg_deleted bit,
	@co_name_short varchar(16),
	@co_name_long varchar(60),
	@contact_title varchar(7),
	@contact_initials varchar(3),
	@contact_forename varchar(60),
	@contact_surname varchar(60),
	@address_no varchar(32),
	@address_line1 varchar(60),
	@address_line2 varchar(60),
	@address_line3 varchar(60),
	@address_line4 varchar(60),
	@address_line5 varchar(60),
	@address_post_code varchar(9),
	@address_full varchar(1000),
	@tel_1 varchar(30),
	@tel_2 varchar(30),
	@tel_fax varchar(30),
	@email varchar(60),
	@co_notes varchar(1000),
	@licenses_purchased int,
	@lincenses_used int,
	@flg_system_locked bit,
	@last_ameneded_by int,
	@date_last_amended datetime,
	@flg_autosave bit,
	@fire_warden_label varchar(50),
	@first_aider_label varchar(50),
	@flg_multi_supervisors bit,
	@supervisor_label varchar(50),
	@flg_trial bit,
	@trial_start_date date,
	@trial_num_of_days int,
	@trial_end_date date,
	@Original_co_id int,
	@co_id int
)
AS
	SET NOCOUNT OFF;
UPDATE [un_co_details] SET [flg_deleted] = @flg_deleted, [co_name_short] = @co_name_short, [co_name_long] = @co_name_long, [contact_title] = @contact_title, [contact_initials] = @contact_initials, [contact_forename] = @contact_forename, [contact_surname] = @contact_surname, [address_no] = @address_no, [address_line1] = @address_line1, [address_line2] = @address_line2, [address_line3] = @address_line3, [address_line4] = @address_line4, [address_line5] = @address_line5, [address_post_code] = @address_post_code, [address_full] = @address_full, [tel_1] = @tel_1, [tel_2] = @tel_2, [tel_fax] = @tel_fax, [email] = @email, [co_notes] = @co_notes, [licenses_purchased] = @licenses_purchased, [lincenses_used] = @lincenses_used, [flg_system_locked] = @flg_system_locked, [last_ameneded_by] = @last_ameneded_by, [date_last_amended] = @date_last_amended ,
	[flg_autosave]=@flg_autosave,[fire_warden_label] = @fire_warden_label, [first_aider_label] = @first_aider_label, [flg_multi_supervisors] = @flg_multi_supervisors, [supervisor_label] = @supervisor_label,[flg_trial] = @flg_trial,[trial_start_date] = @trial_start_date,[trial_num_of_days] = @trial_num_of_days,[trial_end_date] = @trial_end_date
	
WHERE (([co_id] = @Original_co_id));
	
SELECT * FROM un_co_details WHERE (co_id = @co_id)
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.CompanyUpdateCommand')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[DepartmentHazardInsertCommand]
(
	@dept_id int,
	@co_id int,
	@name_desc varchar(255),
	@user_id int,
	@category_id int,
	@flg_default bit
)

AS
	SET NOCOUNT OFF;
declare @index_seq int;

SELECT @index_seq=ISNULL(MAX(index_seq),0) + 1 FROM [un_ref_co_dept_hazards];
INSERT INTO [un_ref_co_dept_hazards] ([flg_deleted], [dept_id], [co_id], [index_seq], [category_id], [name_desc], [created_by], [date_created], [last_amended_by], [date_last_amended],[flg_default]) 
VALUES (0, @dept_id, @co_id,@index_seq ,@category_id, @name_desc, @user_id, GETDATE(), @user_id, GETDATE(),@flg_default);
	
SELECT * FROM un_ref_co_dept_hazards WHERE (sequence = SCOPE_IDENTITY())
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.DepartmentHazardInsertCommand')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[DepartmentHazardUpdateCommand]
(
	@dept_id int,
	@name_desc varchar(255),
	@index_seq int,
	@user_id int,
	@Original_sequence int,
	@sequence int,
	@category_id int,
	@flg_default bit
)
AS
	SET NOCOUNT OFF;
UPDATE [un_ref_co_dept_hazards] SET [dept_id] = @dept_id, [name_desc] = @name_desc,[index_seq]=@index_seq,[category_id]=@category_id, [last_amended_by] = @user_id, [date_last_amended] = GETDATE(),[flg_default] = @flg_default WHERE (([sequence] = @Original_sequence));
	
SELECT * FROM un_ref_co_dept_hazards WHERE (sequence = @sequence)
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.DepartmentHazardUpdateCommand')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[DepartmentOrderInsertCommand]
(
	@flg_delete bit,
	@dept_id int,
	@co_id int,
	@order_ref varchar(32),
	@order_client_ref varchar(32),
	@order_sms varchar(32),
	@date_order_created datetime,
	@order_est_of_works int,
	@date_order_review datetime,
	@flg_order_doc_to_client bit,
	@address_no varchar(32),
	@address_line1 varchar(128),
	@address_line2 varchar(128),
	@address_line3 varchar(128),
	@address_line4 varchar(128),
	@address_line5 varchar(128),
	@address_post_code varchar(9),
	@address_full varchar(1000),
	@order_desc varchar(1000),
	@flg_multi_emer_exits bit,
	@flg_multi_assem_points bit,
	@flg_cancelled bit,
	@date_cancelled datetime,
	@desc_of_work varchar(1000),
	@est_num_of_operatives int,
	@risk_taking varchar(20),
	@created_by int,
	@date_created datetime,
	@last_amended_by int,
	@date_last_amended datetime
)
AS
	SET NOCOUNT OFF;
BEGIN TRY
   BEGIN TRANSACTION    -- Start the transaction
 
	DECLARE @orderSmsString varchar(6);

	UPDATE un_co_details SET order_sms_count = order_sms_count + 1 where co_id = @co_id;

	SELECT @orderSmsString = CAST(order_sms_count as varchar) from un_co_details where co_id = @co_id;

	SELECT @orderSmsString = REPLICATE('0',6 - LEN(@orderSmsString)) + @orderSmsString;

	INSERT INTO [un_co_dept_ords] ([flg_delete], [dept_id], [co_id], [order_ref], [order_client_ref], [order_sms], [date_order_created], [order_est_of_works], [date_order_review], [flg_order_doc_to_client], [address_no], [address_line1], [address_line2], [address_line3], [address_line4], [address_line5], [address_post_code], [address_full], [order_desc], [flg_multi_emer_exits], [flg_multi_assem_points], [flg_cancelled], [date_cancelled],[desc_of_work],[est_num_of_operatives],[risk_taking], [created_by], [date_created], [last_amended_by], [date_last_amended]) VALUES (@flg_delete, @dept_id, @co_id, @order_ref, @order_client_ref, @orderSmsString, @date_order_created, @order_est_of_works, @date_order_review, @flg_order_doc_to_client, @address_no, @address_line1, @address_line2, @address_line3, @address_line4, @address_line5, @address_post_code, @address_full, @order_desc, @flg_multi_emer_exits, @flg_multi_assem_points, @flg_cancelled, @date_cancelled,@desc_of_work,@est_num_of_operatives,@risk_taking, @created_by, @date_created, @last_amended_by, @date_last_amended);

	DECLARE @order_id int;
	
	SELECT @order_id = SCOPE_IDENTITY();

	--insert default hazards
	INSERT into 
	un_co_dept_ord_hazards(co_id,dept_id,order_seq,hazard_desc,flg_delete,date_created,date_last_amended,created_by,last_amended_by)
	SELECT @co_id,@dept_id,@order_id,un_ref_co_dept_hazards.name_desc,0,GETDATE(),GETDATE(),@created_by,@last_amended_by
	FROM un_ref_co_dept_hazards 
	WHERE co_id = @co_id 
	AND dept_id = @dept_id
	AND flg_default = 1;
	--insert default PPE
	
	INSERT into 
	un_co_dept_ord_ppe (co_id,dept_id,order_seq,ppe_desc,flg_delete,date_created,date_last_amended,created_by,last_amended_by)
	SELECT @co_id,@dept_id,@order_id,name_desc,0,GETDATE(),GETDATE(),@created_by,@last_amended_by
	FROM un_ref_co_dept_ppe 
	WHERE co_id = @co_id 
	AND dept_id = @dept_id
	AND flg_default = 1;	
	
	--insert default Tools
	INSERT into 
	un_co_dept_ord_tools (co_id,dept_id,order_seq,tool_desc,flg_delete,date_created,date_last_amended,created_by,last_amended_by)
	SELECT @co_id,@dept_id,@order_id,name_desc,0,GETDATE(),GETDATE(),@created_by,@last_amended_by
	FROM un_ref_co_dept_tools 
	WHERE co_id = @co_id 
	AND dept_id = @dept_id
	AND flg_default = 1;	
	
	--insert default documents
	INSERT into 
	un_co_dept_ord_docs (co_id,dept_id,doc_id,flg_delete,order_id)
	SELECT @co_id,@dept_id,doc_id,0,@order_id
	FROM un_co_dept_template_docs
	WHERE co_id = @co_id
	AND dept_id = @dept_id
	AND flg_default = 1;
	
	--insert default works
	INSERT INTO
	un_co_dept_ord_seq_of_works(co_id,dept_id,flg_delete,order_seq,work_desc,date_created,date_last_amended,created_by,last_amended_by)
	SELECT @co_id,@dept_id,0,@order_id,suggestion_text,GETDATE(),GETDATE(),@created_by,@last_amended_by
	FROM un_ref_co_dept_suggestions
	WHERE co_id = @co_id 
	AND dept_id = @dept_id
	AND flg_default = 1
	AND suggestion_type = 'W';
		
	--insert default requirements
	INSERT INTO un_co_dept_ord_client_req
	 (co_id,dept_id,flg_delete,order_seq,requirement_header,date_created,date_last_amended,created_by,last_amended_by)
	SELECT @co_id,@dept_id,0,@order_id,suggestion_text,GETDATE(),GETDATE(),@created_by,@last_amended_by
	FROM un_ref_co_dept_suggestions
	WHERE co_id = @co_id 
	AND dept_id = @dept_id
	AND flg_default = 1
	AND suggestion_type = 'R';
		
	--insert default aspects
	INSERT INTO 
	un_co_dept_ord_key_aspects(co_id,dept_id,flg_delete,order_seq,key_aspect_header,date_created,date_last_amended,created_by,last_amended_by)
	SELECT @co_id,@dept_id,0,@order_id,suggestion_text,GETDATE(),GETDATE(),@created_by,@last_amended_by
	FROM un_ref_co_dept_suggestions
	WHERE co_id = @co_id 
	AND dept_id = @dept_id
	AND flg_default = 1
	AND suggestion_type = 'A';	
	
	--insert default emergency
	INSERT INTO 
	un_co_dept_ord_emer_exits(co_id,dept_id,flg_delete,order_seq,emer_exit_title,date_created,date_last_amended,created_by,last_amended_by)
	SELECT @co_id,@dept_id,0,@order_id,suggestion_text,GETDATE(),GETDATE(),@created_by,@last_amended_by
	FROM un_ref_co_dept_suggestions
	WHERE co_id = @co_id 
	AND dept_id = @dept_id
	AND flg_default = 1
	AND suggestion_type = 'E';	

	SELECT * FROM un_co_dept_ords WHERE (sequence = @order_id);


-- If we reach here, success!
   COMMIT

END TRY
BEGIN CATCH
  -- Whoops, there was an error
  IF @@TRANCOUNT > 0
     ROLLBACK
 
  -- Raise an error with the details of the exception
  DECLARE @ErrMsg nvarchar(4000), @ErrSeverity int
  SELECT @ErrMsg = ERROR_MESSAGE(),
         @ErrSeverity = ERROR_SEVERITY()
 
  RAISERROR(@ErrMsg, @ErrSeverity, 1)
END CATCH
 	

GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.DepartmentOrderInsertCommand')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[DepartmentPeopleInsertCommand]
(
	@dept_id int,
	@co_id int,
	@name_desc varchar(255),
	@user_id int,
	@flg_supervisor bit,
	@flg_first_aider bit,
	@flg_fire_warden bit
)

AS
	SET NOCOUNT OFF;
declare @index_seq int;

SELECT @index_seq=ISNULL(MAX(index_seq),0) + 1 FROM [un_ref_co_dept_people];
INSERT INTO [un_ref_co_dept_people] ([flg_deleted], [dept_id], [co_id], [index_seq], [name_desc], [created_by], [date_created], [last_ammended_by], [date_last_amended], [flg_supervisor], [flg_first_aider], [flg_fire_warden]) 
VALUES (0, @dept_id, @co_id,@index_seq , @name_desc, @user_id, GETDATE(), @user_id, GETDATE(),@flg_supervisor,@flg_first_aider,@flg_fire_warden);
	
SELECT * FROM un_ref_co_dept_people WHERE (sequence = SCOPE_IDENTITY())
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.DepartmentPeopleInsertCommand')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[DepartmentPPEInsertCommand]
(
	@dept_id int,
	@co_id int,
	@name_desc varchar(255),
	@user_id int,
	@category_id int,
	@flg_default bit
)

AS
	SET NOCOUNT OFF;
declare @index_seq int;

SELECT @index_seq=ISNULL(MAX(index_seq),0) + 1 FROM [un_ref_co_dept_ppe];
INSERT INTO [un_ref_co_dept_ppe] ([flg_deleted], [dept_id], [co_id], [index_seq], [name_desc], [created_by], [date_created], [last_amended_by], [date_last_amended],[category_id],[flg_default]) 
VALUES (0, @dept_id, @co_id,@index_seq , @name_desc, @user_id, GETDATE(), @user_id, GETDATE(),@category_id,@flg_default);
	
SELECT sequence, flg_deleted, dept_id, co_id, index_seq, name_desc, created_by, date_created, last_amended_by, date_last_amended,category_id FROM un_ref_co_dept_ppe WHERE (sequence = SCOPE_IDENTITY())
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.DepartmentPPEInsertCommand')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[DepartmentPPEUpdateCommand]
(
	@dept_id int,
	@name_desc varchar(255),
	@index_seq int,
	@user_id int,
	@Original_sequence int,
	@sequence int,
	@category_id int,
	@flg_default bit
)
AS
	SET NOCOUNT OFF;
UPDATE [un_ref_co_dept_ppe] SET [dept_id] = @dept_id,[category_id] = @category_id, [name_desc] = @name_desc,[index_seq]=@index_seq, [last_amended_by] = @user_id, [date_last_amended] = GETDATE(),flg_default=@flg_default WHERE (([sequence] = @Original_sequence));
	
SELECT * FROM un_ref_co_dept_ppe WHERE (sequence = @sequence)
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.DepartmentPPEUpdateCommand')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[DepartmentToolInsertCommand]
(
	@dept_id int,
	@co_id int,
	@name_desc varchar(255),
	@user_id int,
	@category_id int,
	@flg_default bit
)

AS
	SET NOCOUNT OFF;
declare @index_seq int;

SELECT @index_seq=ISNULL(MAX(index_seq),0) + 1 FROM [un_ref_co_dept_tools];
INSERT INTO [un_ref_co_dept_tools] ([flg_deleted], [dept_id], [co_id], [index_seq], [name_desc], [created_by], [date_created], [last_amended_by], [date_last_amended],[category_id],[flg_default]) 
VALUES (0, @dept_id, @co_id,@index_seq , @name_desc, @user_id, GETDATE(), @user_id, GETDATE(),@category_id,@flg_default);
	
SELECT * FROM un_ref_co_dept_tools WHERE (sequence = SCOPE_IDENTITY())
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.DepartmentToolInsertCommand')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[DepartmentToolUpdateCommand]
(
	@dept_id int,
	@name_desc varchar(255),
	@index_seq int,
	@user_id int,
	@Original_sequence int,
	@sequence int,
	@category_id int,
	@flg_default bit
)
AS
	SET NOCOUNT OFF;
UPDATE [un_ref_co_dept_tools] SET [dept_id] = @dept_id, [name_desc] = @name_desc,[index_seq]=@index_seq, [last_amended_by] = @user_id, [date_last_amended] = GETDATE(),[category_id] = @category_id,[flg_default] = @flg_default WHERE (([sequence] = @Original_sequence));
	
SELECT category_id,sequence, flg_deleted, dept_id, co_id, index_seq, name_desc, created_by, date_created, last_amended_by, date_last_amended FROM un_ref_co_dept_tools WHERE (sequence = @sequence)
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.DepartmentToolUpdateCommand')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[DocumentInsert]
(
	@co_id int,
	@dept_id int,
	@doc_type_id int,
	@doc_name varchar(255),
	@doc_desc varchar(255),
	@doc_code varchar(50),
	@category_id int,
	@doc_index int,
	@file_contents varbinary(MAX),
	@flg_default bit
)
AS
	SET NOCOUNT OFF;
INSERT INTO [un_co_dept_template_docs] ([co_id], [dept_id], [doc_type_id], [doc_name], [doc_desc], [doc_code],[category_id],[doc_index],[flg_default]) VALUES (@co_id, @dept_id, @doc_type_id, @doc_name, @doc_desc, @doc_code,@category_id,@doc_index,@flg_default);

IF  @file_contents IS NOT NULL 
BEGIN	
	INSERT INTO [un_co_dept_template_doc_contents](co_id,dept_id,doc_id,file_contents)
	VALUES(@co_id,@dept_id,@@IDENTITY,@file_contents);
END

GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.DocumentInsert')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[DocumentUpdate]
(
	@doc_name varchar(255),
	@doc_desc varchar(255),
	@doc_code varchar(50),
	@category_id int,
	@doc_index int,
	@original_doc_id int,
	@flg_default bit
)
AS
	SET NOCOUNT OFF;
UPDATE [un_co_dept_template_docs] SET [doc_name] = @doc_name, [doc_desc] = @doc_desc, [doc_code] = @doc_code,[category_id]=@category_id,[doc_index] = @doc_index,[flg_default]=@flg_default WHERE (([doc_id] = @original_doc_id));
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter stored procedure dbo.DocumentUpdate')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[SuggestionInsert]
(
	@co_id int,
	@dept_id int,
	@flg_deleted bit,
	@category_id int,
	@suggestion_text varchar(200),
	@suggestion_type char(1),
	@flg_default bit
)
AS
	SET NOCOUNT OFF;
declare @index_seq int;

SELECT @index_seq=ISNULL(MAX(index_seq),0) + 1 FROM [un_ref_co_dept_suggestions];

INSERT INTO [un_ref_co_dept_suggestions] ([co_id], [dept_id], [flg_deleted], [category_id], [suggestion_text], [index_seq], [suggestion_type], [flg_default]) VALUES (@co_id, @dept_id, @flg_deleted, @category_id, @suggestion_text, @index_seq, @suggestion_type, @flg_default);
	
SELECT un_ref_co_dept_suggestions.*, un_co_dept_categories.category_name
  FROM un_ref_co_dept_suggestions 
inner join un_co_dept_categories ON un_co_dept_categories.category_id = un_ref_co_dept_suggestions.category_id
WHERE (suggestion_id = SCOPE_IDENTITY())
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.SuggestionInsert')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[SuggestionSelect]
	@co_id int,
	@dept_id int,
	@suggestion_type char(1)
AS
	SET NOCOUNT ON;
SELECT un_ref_co_dept_suggestions.*, un_co_dept_categories.category_name
  FROM un_ref_co_dept_suggestions 
inner join un_co_dept_categories ON un_co_dept_categories.category_id = un_ref_co_dept_suggestions.category_id
and un_co_dept_categories.co_id = un_ref_co_dept_suggestions.co_id 
and un_co_dept_categories.dept_id = un_ref_co_dept_suggestions.dept_id 
where un_ref_co_dept_suggestions.co_id = @co_id
and un_ref_co_dept_suggestions.dept_id = @dept_id
and suggestion_type = @suggestion_type
ORDER BY	category_name,index_seq
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.SuggestionSelect')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[SuggestionSelectById]
	@suggestion_id int
AS
	SET NOCOUNT ON;
SELECT un_ref_co_dept_suggestions.*, un_co_dept_categories.category_name
  FROM un_ref_co_dept_suggestions 
inner join un_co_dept_categories ON un_co_dept_categories.category_id = un_ref_co_dept_suggestions.category_id
and un_co_dept_categories.co_id = un_ref_co_dept_suggestions.co_id 
and un_co_dept_categories.dept_id = un_ref_co_dept_suggestions.dept_id 
where suggestion_id = @suggestion_id
order by index_seq
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.SuggestionSelectById')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[SuggestionSelectByName]
	@co_id int,
	@dept_id int,
	@suggestion_type char(1),
	@suggestion_text varchar(200),
	@suggestion_id int
AS
	SET NOCOUNT ON;
SELECT un_ref_co_dept_suggestions.*, un_co_dept_categories.category_name
  FROM un_ref_co_dept_suggestions 
inner join un_co_dept_categories ON un_co_dept_categories.category_id = un_ref_co_dept_suggestions.category_id
and un_co_dept_categories.co_id = un_ref_co_dept_suggestions.co_id 
and un_co_dept_categories.dept_id = un_ref_co_dept_suggestions.dept_id 
where un_ref_co_dept_suggestions.co_id = @co_id
and un_ref_co_dept_suggestions.dept_id = @dept_id
and suggestion_type = @suggestion_type
and suggestion_text = @suggestion_text
AND (@suggestion_id = 0 OR suggestion_id <> @suggestion_id)
order by index_seq
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.SuggestionSelectByName')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[SuggestionUpdate]
(
	@co_id int,
	@dept_id int,
	@flg_deleted bit,
	@category_id int,
	@suggestion_text varchar(200),
	@index_seq int,
	@suggestion_type char(1),
	@flg_default bit,
	@Original_suggestion_id int,
	@suggestion_id int
)
AS
	SET NOCOUNT OFF;
UPDATE [un_ref_co_dept_suggestions] SET [co_id] = @co_id, [dept_id] = @dept_id, [flg_deleted] = @flg_deleted, [category_id] = @category_id, [suggestion_text] = @suggestion_text, [index_seq] = @index_seq, [suggestion_type] = @suggestion_type, [flg_default] = @flg_default WHERE (([suggestion_id] = @Original_suggestion_id));
	
SELECT suggestion_id, co_id, dept_id, flg_deleted, category_id, suggestion_text, index_seq, suggestion_type, flg_default FROM un_ref_co_dept_suggestions WHERE (suggestion_id = @suggestion_id)
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.SuggestionUpdate')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TABLE [dbo].[un_ref_co_dept_suggestions] ADD 
	CONSTRAINT [PK_un_ref_co_dept_suggestions] PRIMARY KEY CLUSTERED 
	(
		[suggestion_id]
	) ON [PRIMARY];
GO

IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add primary key dbo.un_ref_co_dept_suggestions.PK_un_ref_co_dept_suggestions')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TABLE [dbo].[un_ref_co_dept_suggestions] ADD 
	CONSTRAINT [FK_un_ref_co_dept_suggestions_un_co_dept_categories] FOREIGN KEY 
	(
		[category_id]
	)REFERENCES [dbo].[un_co_dept_categories](
		[category_id]
	)ON UPDATE NO ACTION ON DELETE NO ACTION 
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add foreign key dbo.un_ref_co_dept_suggestions.FK_un_ref_co_dept_suggestions_un_co_dept_categories')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TABLE [dbo].[un_ref_co_dept_suggestions] ADD 
	CONSTRAINT [FK_un_ref_co_dept_suggestions_un_co_dept_details] FOREIGN KEY 
	(
		[dept_id]
	)REFERENCES [dbo].[un_co_dept_details](
		[dept_id]
	)ON UPDATE NO ACTION ON DELETE NO ACTION 
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add foreign key dbo.un_ref_co_dept_suggestions.FK_un_ref_co_dept_suggestions_un_co_dept_details')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TABLE [dbo].[un_ref_co_dept_suggestions] ADD 
	CONSTRAINT [FK_un_ref_co_dept_suggestions_un_co_details] FOREIGN KEY 
	(
		[co_id]
	)REFERENCES [dbo].[un_co_details](
		[co_id]
	)ON UPDATE NO ACTION ON DELETE NO ACTION 
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add foreign key dbo.un_ref_co_dept_suggestions.FK_un_ref_co_dept_suggestions_un_co_details')
END
GO
IF EXISTS (Select * from #ErrorLog)
BEGIN
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
END
ELSE
BEGIN
	IF @@TRANCOUNT>0 COMMIT TRANSACTION
END
IF EXISTS (Select * from #ErrorLog)
BEGIN
	Print 'Database synchronization script failed'
	GOTO QuitWithErrors
END
ELSE
BEGIN
	Print 'Database synchronization completed successfully'
END



QuitWithErrors:


